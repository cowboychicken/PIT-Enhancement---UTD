-------------------------------------------------------------------------------
Test set:  
-------------------------------------------------------------------------------
Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec <<< FAILURE! - in org.pitest.mutationtest.build.intercept.logging.LoggingCallsFilterTest
shouldNotFilterMutantsOnLinesOtherThanLoggingLine(org.pitest.mutationtest.build.intercept.logging.LoggingCallsFilterTest)  Time elapsed: 0.02 sec  <<< FAILURE!
java.lang.AssertionError: 
Expecting elements:
<[MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=noLog, methodDesc=(I)I], indexes=[4], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=LoggingCallsFilterTest.java, block=2, lineNumber=109, description=Changed increment from 1 to -1, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=noLog, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=LoggingCallsFilterTest.java, block=2, lineNumber=109, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperatorReplacementMutator3], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced integer addition with division, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperatorReplacementMutator5], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced integer addition with AND, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperatorReplacementMutator1], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced integer addition with subtraction, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperandDeleteMutator1], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced equation with first operand, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.MathMutator], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced integer addition with subtraction, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperatorReplacementMutator9], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced integer addition with Shift Right, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperatorReplacementMutator6], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced integer addition with modulus, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperatorReplacementMutator8], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced integer addition with Shift Left, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperatorReplacementMutator7], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced integer addition with XOR, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperandDeleteMutator2], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Mutated., testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperatorReplacementMutator2], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced integer addition with multiplication, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperatorReplacementMutator10], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced integer addition with Unsigned Shift Right, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[5], mutator=org.pitest.mutationtest.engine.gregor.mutators.ArithmeticOperatorReplacementMutator4], filename=LoggingCallsFilterTest.java, block=3, lineNumber=113, description=Replaced integer addition with OR, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[23], mutator=org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator], filename=LoggingCallsFilterTest.java, block=3, lineNumber=116, description=Changed increment from 1 to -1, testsInOrder=[], isInFinallyBlock=false, poison=NORMAL],
    MutationDetails [id=MutationIdentifier [location=Location [clazz=org.pitest.mutationtest.build.intercept.logging.LogsAndDoesNot, method=both, methodDesc=(I)I], indexes=[24], mutator=org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator], filename=LoggingCallsFilterTest.java, block=3, lineNumber=116, description=replaced return of integer sized value with (x == 0 ? 1 : 0), testsInOrder=[], isInFinallyBlock=false, poison=NORMAL]]>
 to have exactly 3 times <mutants in the methed both>
	at org.pitest.mutationtest.build.intercept.logging.LoggingCallsFilterTest.shouldNotFilterMutantsOnLinesOtherThanLoggingLine(LoggingCallsFilterTest.java:62)

